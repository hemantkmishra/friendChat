{
  "_from": "es6views",
  "_id": "es6views@1.0.0",
  "_inBundle": false,
  "_integrity": "sha1-pbi6Kxws1xH+mJUWtPHYiOYZsF0=",
  "_location": "/es6views",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "es6views",
    "fetchSpec": "latest",
    "name": "es6views",
    "raw": "es6views",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/es6views/-/es6views-1.0.0.tgz",
  "_shasum": "a5b8ba2b1c2cd711fe989516b4f1d888e619b05d",
  "_shrinkwrap": null,
  "_spec": "es6views",
  "_where": "F:\\nodeproject\\friendChat",
  "author": {
    "name": "Nikhil Nigade"
  },
  "bin": {
    "es6views": "bin/parser"
  },
  "bugs": {
    "url": "https://github.com/DZNS/ES6Views/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "commander": "^2.9.0"
  },
  "deprecated": false,
  "description": "View Engine for ExpressJS. Write your views using ES6 Template Strings. Simple, fast, extensible.",
  "devDependencies": {},
  "homepage": "https://github.com/DZNS/ES6Views#readme",
  "keywords": [
    "ES6",
    "basic",
    "engine",
    "express",
    "extend",
    "simple",
    "subclass",
    "view"
  ],
  "license": "MIT",
  "main": "layout.js",
  "name": "es6views",
  "optionalDependencies": {},
  "readme": "# ES6Views\nView Engine for ExpressJS. Write your views using ES6 Template Strings. Simple, fast, extensible.\n\n\n### Installation\n```\nnpm install --save es6views\n```\n\n### Usage\n```js\n// where ever you setup your view engine for ExpressJS\nconst esviews = require(\"es6views\")\nesviews.viewEngine(app)\napp.set('views', path.join(__dirname, 'views'))\napp.set('view engine', 'es6')\n```\n\n### Templates \nFirst off, create your base layout which will hold all the common logic for your views\n```js\nconst Layout  = require(\"es6views\").Layout\n\nclass MyLayout extends Layout {\n\n    parse() {\n        let markup = `<head>\n            <title>${this._data.title}</title>\n        </head>\n        <body>`\n        \n        markup += [this.header(), this.content(), this.footer()].join(\"\")\n          \n        markup += `</body>`\n        \n        this._markup = markup\n    }\n    \n    header () {\n        const data = this.data\n        return `<header>${data.title}</header>`\n    }\n    \n    content () {\n        return ``\n    }\n    \n    footer () {\n        return `<footer>2008-${(new Date()).getFullYear() Dezine Zync Studios. All Rights Reserved.}</footer>`\n    }\n    \n}\n\nmodule.exports = MyLayout\n```\n\nThen, inside a page template, you can do the following: \n```js\nconst MyLayout = require('./mylayout.es6')\n\nclass Posts extends MyLayout {\n    content () {\n        const data = this.data\n        const posts = data.posts\n        \n        return posts.map(post => {\n            return `<article>${post.body}</article>`\n        }).join(\"\")\n    }\n}\n\nmodule.exports = Posts\n```\n\nYou can then use it in your route like so:\n```js\nrouter.get('/posts', (req, res) => {\n    let locals = Object.assign({}, res.locals, {\n        posts: posts\n    })\n    res.render('projects', locals)\n})\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/DZNS/ES6Views.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.0"
}
